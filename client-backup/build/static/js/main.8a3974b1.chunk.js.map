{"version":3,"sources":["screens/HomeScreen.jsx","screens/LayerScreen.jsx","screens/SettingScreen.jsx","App.js","index.js"],"names":["mockData","writer","name","image","content","id","date","files","myLove","love","styles","StyleSheet","create","writerContainer","flexDirection","writerSubContainer","justifyContent","profileImage","width","height","borderRadius","contentContainer","contentLoveContainer","alignItems","color","loveButton","HomeScreen","console","log","ContentList","map","data","View","style","Image","source","uri","Text","IconButton","onClick","ScrollView","React","PureComponent","HomeStack","createStackNavigator","HomeStackScreen","Navigator","Screen","component","options","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","LayerScreen","flex","SettingScreen","Tab","createBottomTabNavigator","App","screenOptions","route","tabBarIcon","focused","size","Home","Layer","Setting","tabBarOptions","showLabel","activeTintColor","inactiveTintColor","Main","AppRegistry","rootTag","document"],"mappings":"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","file":"static/js/main.8a3974b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Text, View, ScrollView, Image, StyleSheet } from 'react-native';\r\nimport { IconButton } from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nconst mockData = [\r\n  {\r\n    writer: {\r\n      name: '뽀로로',\r\n      image: 'https://pds.joins.com/news/component/moneytoday/201110/04/2011100410252859481_1.jpg',\r\n    },\r\n    content: {\r\n      id: '1',\r\n      date: '2021.02.10 12:16',\r\n      content:\r\n        'To be able to interact with the screen component, we need to use navigation.setOptions to define our button instead of the options prop. By using navigation.setOptions inside the screen component, we get access to screens props, state, context etc.',\r\n      files: ['file link1, file link2'],\r\n      myLove: true,\r\n      love: 9,\r\n    },\r\n  },\r\n];\r\n\r\nconst styles = StyleSheet.create({\r\n  writerContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  writerSubContainer: {\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n  profileImage: {\r\n    width: '60px',\r\n    height: '60px',\r\n    borderRadius: '50%',\r\n  },\r\n\r\n  contentContainer: {\r\n    flexDirection: 'column',\r\n  },\r\n  contentLoveContainer: {\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    color: 'red',\r\n  },\r\n  loveButton: {\r\n    width: '50px',\r\n  },\r\n});\r\n\r\nclass HomeScreen extends React.PureComponent {\r\n  componentDidMount() {\r\n    console.log('component is mounted');\r\n  }\r\n  componentWillUnmount() {\r\n    console.log('component did unmounted.');\r\n  }\r\n  render() {\r\n    const ContentList = mockData.map((data) => {\r\n      const writer = data.writer;\r\n      const content = data.content;\r\n      return (\r\n        <View key={content.id}>\r\n          <View style={styles.writerContainer}>\r\n            <Image style={styles.profileImage} source={{ uri: writer.image }} />\r\n            <View style={styles.writerSubContainer}>\r\n              <Text>{writer.name}</Text>\r\n              <Text>{content.date}</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.contentContainer}>\r\n            <Text>{content.content}</Text>\r\n            <View style={styles.contentLoveContainer}>\r\n              <IconButton color=\"inherit\" onClick={() => console.log('pressed')}>\r\n                {content.myLove ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n              </IconButton>\r\n              <Text styles={{ color: 'red', width: '20px' }}>{content.love}</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      );\r\n    });\r\n    return <ScrollView>{ContentList}</ScrollView>;\r\n  }\r\n}\r\n\r\nconst HomeStack = createStackNavigator();\r\n\r\nexport default function HomeStackScreen() {\r\n  return (\r\n    <HomeStack.Navigator>\r\n      <HomeStack.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{\r\n          title: 'MANMIN YOUTH',\r\n          headerStyle: {\r\n            backgroundColor: '#2399E7',\r\n          },\r\n          headerTintColor: '#fff',\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n          },\r\n        }}\r\n      />\r\n    </HomeStack.Navigator>\r\n  );\r\n}\r\n","import { Text, View } from 'react-native';\r\n\r\nexport default function LayerScreen() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Board Layer!</Text>\r\n    </View>\r\n  );\r\n}\r\n","import { Text, View } from 'react-native';\r\n\r\nexport default function SettingScreen() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Settings!</Text>\r\n    </View>\r\n  );\r\n}\r\n","import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { IoHome, IoSettingsOutline, IoSettings, IoLayersOutline, IoLayers } from 'react-icons/io5';\nimport HomeScreen from './screens/HomeScreen';\nimport LayerScreen from './screens/LayerScreen';\nimport SettingScreen from './screens/SettingScreen';\n\nconst Tab = createBottomTabNavigator();\n\nexport default class App extends React.PureComponent {\n  render() {\n    return (\n      <NavigationContainer>\n        <Tab.Navigator\n          screenOptions={({ route }) => ({\n            tabBarIcon: ({ focused, color, size }) => {\n              let icons = {\n                Home: <IoHome size={size} color={color} />,\n                Layer: focused ? <IoLayers size={size} color={color} /> : <IoLayersOutline size={size} color={color} />,\n                Setting: focused ? (\n                  <IoSettings size={size} color={color} />\n                ) : (\n                  <IoSettingsOutline size={size} color={color} />\n                ),\n              };\n              return icons[route.name];\n            },\n          })}\n          tabBarOptions={{\n            showLabel: false,\n            activeTintColor: 'tomato',\n            inactiveTintColor: 'gray',\n          }}\n        >\n          <Tab.Screen name=\"Home\" component={HomeScreen} />\n          <Tab.Screen name=\"Layer\" component={LayerScreen} />\n          <Tab.Screen name=\"Setting\" component={SettingScreen} />\n        </Tab.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n","import { AppRegistry } from 'react-native';\nimport App from './App';\nimport * as React from 'react';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nexport default function Main() {\n  return (\n    <PaperProvider>\n      <App />\n    </PaperProvider>\n  );\n}\n\nAppRegistry.registerComponent('App', () => Main);\n\nAppRegistry.runApplication('App', {\n  rootTag: document.getElementById('root'),\n});\n"],"sourceRoot":""}